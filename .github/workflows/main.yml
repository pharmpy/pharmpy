name: main

on:
  workflow_call:
  push:
    branches:
      - main
      - release
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:

  unit:
    strategy:
      matrix:
        include:
          - python-version: '3.11'
            platform: 'ubuntu-24.04'
            tox-env: 'unit'
          - python-version: '3.12'
            platform: 'ubuntu-24.04'
            tox-env: 'unit'
          - python-version: '3.13'
            platform: 'ubuntu-24.04'
            tox-env: ${{ github.actor != 'dependabot[bot]' && 'unit-cover' || 'unit' }}
          - platform: 'windows-2022'
            python-version: '3.11'
            tox-env: 'unit'
          - platform: 'windows-2022'
            python-version: '3.12'
            tox-env: 'unit'
          - platform: 'windows-2025'
            python-version: '3.13'
            tox-env: 'unit'
          - platform: 'ubuntu-24.04-arm'
            python-version: '3.13'
            tox-env: 'unit'
          - platform: 'macos-15-intel'
            python-version: '3.13'
            tox-env: 'unit'
          - platform: 'macos-14'
            python-version: '3.11'
            tox-env: 'unit'
          - platform: 'macos-15'
            python-version: '3.12'
            tox-env: 'unit'
          - platform: 'macos-15'
            python-version: '3.13'
            tox-env: 'unit'

    runs-on: ${{ matrix.platform }}

    steps:

      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-tox
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run unit tests with tox${{ matrix.tox-env == 'unit-cover' && ' (with coverage).' || '.' }}
        shell: bash
        run: |
            tox -e ${{ matrix.tox-env }}

      - uses: codecov/codecov-action@v3
        if: matrix.tox-env == 'unit-cover'
        with:
          flags: unit,${{ matrix.platform }},python-${{ matrix.python-version }}
          files: ./.coverage.xml

      - name: Check coverage level
        if: matrix.tox-env == 'unit-cover'
        shell: bash
        run: |
          tox -e coverage-check


  doctest:
    strategy:
      matrix:
        platform: [ubuntu-24.04]
        python-version: ['3.13']

    runs-on: ${{ matrix.platform }}

    steps:

      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-tox
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run doctest tests with tox
        shell: bash
        run: tox -e doctest


  lint:
    strategy:
      matrix:
        platform: [ubuntu-24.04]
        python-version: ['3.13']

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-tox
        with:
          python-version: ${{ matrix.python-version }}
      - name: Lint MANIFEST and Python files
        run: tox -e lint


  type-check:
    strategy:
      matrix:
        platform: [ubuntu-24.04]
        python-version: ['3.13']

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-tox
        with:
          python-version: ${{ matrix.python-version }}
      - name: Type checking
        run: tox -e type-check


  docs-build:
    strategy:
      matrix:
        platform: [ubuntu-24.04]
        python-version: ['3.13']

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-tox
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install graphviz
        run: sudo apt install graphviz
      - name: Build docs
        run: tox -e docs-build


  docs-lint:
    strategy:
      matrix:
        platform: [ubuntu-24.04]
        python-version: ['3.13']

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-tox
        with:
          python-version: ${{ matrix.python-version }}
      - name: Lint docs
        run: tox -e docs-lint
