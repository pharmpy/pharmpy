name: Integration

on:
  workflow_call:
  workflow_dispatch:
  push:
    tags:
      - 'v*'
  schedule:
    - cron: "0 0 * * 0,3"

jobs:

  get-nonmem:
    runs-on: ubuntu-24.04
    steps:

      - name: Cache NONMEM
        id: cache-nonmem
        uses: actions/cache@v3
        with:
            path: 751.zip
            key: nonmem-751
            enableCrossOsArchive: true

      - name: Download NONMEM
        if: steps.cache-nonmem.outputs.cache-hit != 'true'
        run: |
          sudo apt install lynx
          echo 'key /' >>lynxcmds
          echo 'key 7' >>lynxcmds
          echo 'key 5' >>lynxcmds
          echo 'key 1' >>lynxcmds
          echo 'key ^J' >>lynxcmds
          echo 'key ^J' >>lynxcmds
          echo 'key /' >>lynxcmds
          echo 'key z' >>lynxcmds
          echo 'key i' >>lynxcmds
          echo 'key p' >>lynxcmds
          echo 'key ^J' >>lynxcmds
          echo 'key d' >>lynxcmds
          echo 'key ^J' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key 7' >>lynxcmds
          echo 'key 5' >>lynxcmds
          echo 'key 1' >>lynxcmds
          echo 'key .' >>lynxcmds
          echo 'key z' >>lynxcmds
          echo 'key i' >>lynxcmds
          echo 'key p' >>lynxcmds
          echo 'key ^J' >>lynxcmds
          echo 'key Q' >>lynxcmds
          lynx -accept-all-cookies nonmem.iconplc.com -cmd_script=lynxcmds


  integration-ubuntu:
    needs: [get-nonmem]
    runs-on: ubuntu-24.04
    steps:

      - name: Checkout Pharmpy
        uses: actions/checkout@v4

      - name: Get NONMEM
        id: cache-nonmem
        uses: actions/cache@v3
        with:
            path: 751.zip
            key: nonmem-751

      - name: Unzip NONMEM
        run: unzip -P $ZIP_KEY 751.zip
        env:
          ZIP_KEY: ${{secrets.ZIP_751_KEY}}

      - name: Setup gfortran
        uses: rikardn/setup-fortran@f6a49e34d573ca3753a8ea751bf8dda1879e5f05
        with:
          compiler: gcc
          version: 12

      - name: NONMEM license
        run: echo $LICENSE_KEY > nm751CD/nonmem.lic
        env:
          LICENSE_KEY: ${{secrets.LICENSE_KEY}}

      - name: Install NONMEM
        run: |
          cd nm751CD
          /bin/bash SETUP75 $(realpath .) $(realpath ../nm751) gfortran y ar same rec q

      - name: Create pharmpy.conf
        run: |
          export CONFDIR=/home/runner/.config/Pharmpy
          mkdir -p $CONFDIR
          echo '[pharmpy.plugins.nonmem]' > $CONFDIR/pharmpy.conf
          echo 'parameter_names=comment,basic' >> $CONFDIR/pharmpy.conf
          echo "default_nonmem_path=$(realpath nm751)" >> $CONFDIR/pharmpy.conf
          cat $CONFDIR/pharmpy.conf
          ls -l /home/runner/work/pharmpy/pharmpy/nm751

      - uses: ./.github/actions/setup-tox
        with:
          python-version: 3.13

      - name: Run integration tests
        run: tox -e integration

      - name: Tar failed integration tests
        run: tar -cvf tests.tar /tmp/pytest-of-*
        if: ${{ failure() }}

      - name: Upload failed integration test directories artifact
        uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
            name: integration-tests-ubuntu
            path: tests.tar


  integration-macos:
    needs: [get-nonmem]
    strategy:
      matrix:
        platform: [macos-15]
    
    runs-on: ${{ matrix.platform }}

    steps:

      - name: Checkout Pharmpy
        uses: actions/checkout@v4

      - name: Setup gfortran
        uses: rikardn/setup-fortran@f6a49e34d573ca3753a8ea751bf8dda1879e5f05
        with:
          compiler: gcc
          version: 12

      - name: Get NONMEM
        id: cache-nonmem
        uses: actions/cache@v3
        with:
            path: 751.zip
            key: nonmem-751

      - name: Unzip NONMEM
        run: unzip -P $ZIP_KEY 751.zip
        env:
          ZIP_KEY: ${{secrets.ZIP_751_KEY}}

      - name: NONMEM license
        run: echo $LICENSE_KEY > nm751CD/nonmem.lic
        env:
          LICENSE_KEY: ${{secrets.LICENSE_KEY}}

      - name: Install NONMEM
        run: |
          cd nm751CD
          mkdir ../nm751
          /bin/bash SETUP75 $(realpath .) $(realpath ../nm751) gfortran y ar same rec q

      - name: Create pharmpy.conf
        run: |
          export CONFDIR=/Users/runner/Library/Application\ Support/Pharmpy
          mkdir -p "$CONFDIR"
          echo '[pharmpy.plugins.nonmem]' > "$CONFDIR/pharmpy.conf"
          echo 'parameter_names=comment,basic' >> "$CONFDIR/pharmpy.conf"
          echo "default_nonmem_path=$(realpath nm751)" >> "$CONFDIR/pharmpy.conf"

      - uses: ./.github/actions/setup-tox
        with:
          python-version: 3.13

      - name: Run integration tests
        run: tox -e integration


  integration-windows:
    needs: [get-nonmem]
    runs-on: windows-2022
    steps:

      - name: Checkout Pharmpy
        uses: actions/checkout@v4

      - name: Setup gfortran
        uses: rikardn/setup-fortran@f6a49e34d573ca3753a8ea751bf8dda1879e5f05
        with:
          compiler: gcc
          version: 12

      - name: Get NONMEM
        id: cache-nonmem
        uses: actions/cache@v3
        with:
            path: 751.zip
            key: nonmem-751
            enableCrossOsArchive: true

      - name: Unzip NONMEM
        run: 7z x 751.zip -p%ZIP_KEY%
        env:
          ZIP_KEY: ${{secrets.ZIP_751_KEY}}
        shell: cmd

      - name: NONMEM license
        run: echo $LICENSE_KEY > nm751CD/nonmem.lic
        env:
          LICENSE_KEY: ${{secrets.LICENSE_KEY}}
        shell: bash

      - name: Install NONMEM
        run: |
          set INSTALLDIR=%CD%\nm751
          cd nm751CD
          SETUP75.bat %CD% %INSTALLDIR% gfortran y ar same rec q
        shell: cmd

      - name: Create pharmpy.conf
        run: |
          export CONFDIR=/c/Users/runneradmin/AppData/Local/Pharmpy/Pharmpy
          mkdir -p $CONFDIR
          echo '[pharmpy.plugins.nonmem]' > $CONFDIR/pharmpy.conf
          echo 'parameter_names=comment,basic' >> $CONFDIR/pharmpy.conf
          echo 'default_nonmem_path=D:\a\pharmpy\pharmpy\nm751' >> $CONFDIR/pharmpy.conf
        shell: bash

      - uses: ./.github/actions/setup-tox
        with:
          python-version: 3.12

      - name: Run integration tests
        run: tox -e integration

      - name: Upload failed integration test directories artifact
        uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
            name: integration-tests-ubuntu
            path: ${{ runner.temp }}\pytest-of-*
