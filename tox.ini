; a generative tox configuration, see: https://tox.readthedocs.io/en/latest/config.html#generative-envlist
;
[flake8]
max-line-length = 100

[tox]
ignore_basepython_conflict=True
skip_missing_interpreters=True
envlist =
    {py38-,py39-,py310-,}{doctest,unit,integration}{-cover,}
    {py38-,py39-,py310-,}{lint,format,report,docs,sphinxtest,doccheck},
    clean,
    spell,
    licenses

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310

[gh-actions:env]
TOX_SUITE =
    doctest: doctest
    unit: unit
    integration: integration
    lint: lint
    docs-build: docs
    docs-test: sphinxtest
    docs-lint: doccheck
TOX_PYTEST_COVER =
    doctest: cover
    unit: cover
    integration: cover

[testenv]
basepython = {env:TOXPYTHON:python3.9}
skip_install = true
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
    PYTHONASYNCIODEBUG=1
    PHARMPYNOCONFIGFILE=1
passenv =
    *
usedevelop = false
allowlist_externals =
    rm
    printf
    false
commands =
    printf "ERROR: unknown environment '%s'\n" {envname}
    printf "Maybe factors where given in the wrong order?\n"
    false

[base]
deps =
    pytest>5.3.5
    pytest-asyncio>=0.17.0
    pytest-xdist>1.34.0
    cover: pytest-cov
    profile: pytest-profiling
    profile: gprof2dot==2019.11.30
    debug: pdbpp

[flags]
cover = --cov --cov-report=term-missing --cov-report xml:.coverage.xml
profile = --profile-svg
debug = --pdb

[testenv:{py38,py39,py310,py38-unit,py39-unit,py310-unit,unit}{-cover,}{-profile,}{-debug,}]
skip_install = false
deps =
    -rrequirements.txt
    {[base]deps}
commands = pytest -n auto -vv \
    profile: {[flags]profile} \
    cover: {[flags]cover} \
    debug: {[flags]debug} \
    {posargs:tests}

[testenv:py{38,39,310}-doctest{-cover,}]
skip_install = false
deps =
    -rrequirements.txt
    {[base]deps}
commands = pytest -W ignore::UserWarning -n auto -vv \
    profile: {[flags]profile} \
    cover: {[flags]cover} \
    debug: {[flags]debug} \
    --doctest-modules {posargs:src}

[testenv:{py38-,py39-,py310-,}integration{-cover,}{-profile,}{-debug,}]
skip_install = false
deps =
    -rrequirements.txt
    {[base]deps}
setenv =
    PHARMPYNOCONFIGFILE=0
commands = pytest -vv \
    profile: {[flags]profile} \
    cover: {[flags]cover} \
    debug: {[flags]debug} \
    {posargs:tests/integration}

[testenv:run]
setenv =
    PHARMPYNOCONFIGFILE=0
skip_install = false
deps =
    -rrequirements.txt

[testenv:spell]
basepython = {env:TOXPYTHON:python2.7}
setenv =
    SPELLCHECK=1
commands =
    sphinx-build -j auto -b spelling docs dist/docs
deps =
    -r{toxinidir}/docs/requirements.txt
    sphinxcontrib-spelling
    pyenchant

[testenv:{py38-,py39-,py310-,}sphinxtest]
skip_install = false
deps =
    -rrequirements.txt
    -r{toxinidir}/docs/requirements.txt
commands =
    pip install ipykernel==5.5.5  # Unable to build docs with newer version
    pip install sphinx>=5.1.1
    pip install sphinx-tabs>=3.4.1
    sphinx-build {posargs:-E} -j auto -b doctest docs dist/docs

[testenv:{py38-,py39-,py310-,}docs]
skip_install = false
deps =
    -rrequirements.txt
    -r{toxinidir}/docs/requirements.txt
commands =
    pip install ipykernel==5.5.5  # Unable to build docs with newer version
    pip install sphinx>=5.1.1
    pip install sphinx-tabs>=3.4.1
    rm -rf docs/api
    sphinx-build {posargs:-E} -j auto -b html docs dist/docs
    sphinx-build -j auto -b linkcheck docs dist/docs

[linters]
deps =
    docutils
    check-manifest >= 0.45
    flake8
    readme-renderer
    pygments
    isort >= 5.0.0
    twine
    black
    flake8-black

[testenv:{py38-,py39-,py310-,}format]
deps =
    {[linters]deps}
commands =
    check-manifest -u -v {toxinidir}
    black src tests setup.py
    flake8 src tests setup.py
    isort src tests setup.py

[testenv:{py38-,py39-,py310-,}lint]
deps =
    {[linters]deps}
commands =
    check-manifest -v {toxinidir}
    black --check --diff src tests setup.py
    flake8 src tests setup.py
    isort --check --diff src tests setup.py

[testenv:{py38-,py39-,py310-,}report]
deps = coverage
commands =
    coverage report
    coverage html

[testenv:clean]
commands = coverage erase
deps = coverage

[testenv:licenses]
skip_install = false
deps =
    -rrequirements.txt
    pip-licenses
commands =
    pip-licenses

[testenv:{py38-,py39-,py310-,}doccheck]
skip_install = false
deps =
    darglint
commands =
    darglint --docstring-style numpy -z long src/pharmpy/modeling
